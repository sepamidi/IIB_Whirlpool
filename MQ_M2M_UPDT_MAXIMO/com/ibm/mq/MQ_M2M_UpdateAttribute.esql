BROKER SCHEMA com.ibm.mq

DECLARE MaximoURL_AttrID EXTERNAL CHARACTER 'https://whirlpool-dev.mam.ibmserviceengage.com/maximo_b1dk/rest/mbo/ASSET/<<DEVID>>/ASSETDM?&ATTRNAME=~eq~<<ATTRNAME>>&_format=json&_compact=true';
DECLARE MaximoURL_ALN EXTERNAL CHARACTER 'https://whirlpool-dev.mam.ibmserviceengage.com/maximo_b1dk/rest/mbo/CDMASSETDM/<<CDMASSETDMID>>?_action=AddChange&ALNVALUE=<<VALUE>>&SITEID=WHR&_format=json&_compact=true';
DECLARE MaximoURL_NUM EXTERNAL CHARACTER 'https://whirlpool-dev.mam.ibmserviceengage.com/maximo_b1dk/rest/mbo/CDMASSETDM/<<CDMASSETDMID>>?_action=AddChange&NUMVALUE=<<VALUE>>&SITEID=WHR&_format=json&_compact=true';
DECLARE Maximo_user EXTERNAL CHARACTER 'sibdas';
DECLARE Maximo_password EXTERNAL CHARACTER 'IBM@Sibdas2';

CREATE FUNCTION getAttributes(IN said CHARACTER)
RETURNS CHARACTER
LANGUAGE JAVA
EXTERNAL NAME "com.whirlpool.cache.Cache.getSAIDM2M";

CREATE Function getKey(IN mapkey CHARACTER)
RETURNS CHARACTER
LANGUAGE JAVA
EXTERNAL NAME "com.whirlpool.cache.Cache.getM2MDMKeyNameAlias";


CREATE COMPUTE MODULE MQ_M2M_UpdateAttribute_ParseandBuildRequest
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL ParseMessage();
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE ParseMessage()
	BEGIN
		CREATE LASTCHILD OF Environment DOMAIN ('DFDL') PARSE(InputRoot.BLOB.BLOB ENCODING InputRoot.Properties.Encoding CCSID 1208 TYPE '{}:PublishKvp' OPTIONS RootBitStream);
		DECLARE SAID CHARACTER InputRoot.MQRFH2.usr.SAID;
		SET Environment.Variables.SAID = SAID;
		DECLARE moduleNum,deviceAttr,deviceId,modelNum,serialNum,dataIn,mapKey,cacheValue,valueLen CHARACTER;
		DECLARE keyInt,lenChar,nullPos INTEGER;
		DECLARE keyBlob,valueBlob BLOB;
		SET moduleNum = SUBSTRING(SUBSTRING(CAST(Environment.DFDL.PublishKvp.payload.sourceNode AS CHARACTER) AFTER 'X''') BEFORE '''');
		SET deviceAttr = getAttributes(SAID);--'9999,WTW8700EC1,7890';
		IF deviceAttr = 'NOTFOUNDS' THEN
			THROW USER EXCEPTION MESSAGE 2951 VALUES('SAID: '||SAID||' not found in cache SAIDMap');
		END IF;

		SET deviceId =  SUBSTRING(deviceAttr BEFORE ',');
		SET deviceAttr = SUBSTRING(deviceAttr AFTER ',');
		SET modelNum = SUBSTRING(deviceAttr BEFORE ',');
		SET serialNum = SUBSTRING(deviceAttr AFTER ',');

		DECLARE kvp CHARACTER CAST(Environment.DFDL.PublishKvp.payload.data AS CHARACTER);
		SET dataIn = SUBSTRING(SUBSTRING(kvp AFTER 'X''') BEFORE '''');

		WHILE (dataIn <> '' OR dataIn <> NULL) DO
			SET keyBlob = RIGHT('0000000000000000'||SUBSTRING(dataIn FROM 1 FOR 8),16);
			SET keyInt = CAST(keyBlob AS INTEGER);
			SET mapKey = CAST(keyInt AS CHARACTER)||modelNum; --modelNum||moduleNum||CAST(keyInt AS CHARACTER);
			SET cacheValue = getKey(mapKey); --'Attribute1,1';

			IF cacheValue = 'NOTFOUNDD' THEN
				THROW USER EXCEPTION MESSAGE 2951 VALUES('Key: '||CAST(keyInt AS CHARACTER)||' not found in record model='||modelNum||' module='||moduleNum);
			END IF;

			SET Environment.Variables.attrName = SUBSTRING(cacheValue BEFORE ',');
			SET cacheValue = SUBSTRING(cacheValue AFTER ',');
			SET valueLen = SUBSTRING(cacheValue AFTER ',');

			IF (valueLen IN ('1','2','4')) THEN
				SET lenChar = CAST(valueLen AS INTEGER)*2;
				SET valueBlob = RIGHT('0000000000000000'||SUBSTRING(dataIn FROM 9 FOR lenChar),16);
				SET Environment.Variables.attrValue = CAST(valueBlob AS INTEGER);
				SET Environment.Variables.reqURL = MaximoURL_ALN;--MaximoURL_NUM;
			ELSE
				SET nullPos = POSITION('00' IN SUBSTRING(dataIn FROM 9));
				SET valueBlob = SUBSTRING(dataIn FROM 9 FOR nullPos-1);
				SET Environment.Variables.attrValue = CAST (valueBlob AS CHARACTER CCSID 1208 ENCODING 546);
				SET Environment.Variables.reqURL = MaximoURL_ALN;
			END IF;

			CREATE LASTCHILD OF Environment.JSON.Data TYPE NameValue NAME Environment.Variables.attrName VALUE Environment.Variables.attrValue;
			
			DECLARE auth CHARACTER Maximo_user||':'||Maximo_password; 
			SET OutputRoot.HTTPRequestHeader.MAXAUTH = BASE64ENCODE(auth);
			SET OutputLocalEnvironment.Destination.HTTP.RequestURL = REPLACE(REPLACE(MaximoURL_AttrID,'<<DEVID>>',deviceId),'<<ATTRNAME>>',Environment.Variables.attrName);
			SET OutputLocalEnvironment.Destination.HTTP.RequestLine.Method = 'GET';		

			PROPAGATE TO TERMINAL 'out' DELETE NONE;

			SET dataIn = SUBSTRING(dataIn FROM lenChar+9);
		END WHILE;
		
		CREATE NEXTSIBLING OF OutputRoot.Properties DOMAIN 'MQMD' NAME 'MQMD'; 
		SET OutputRoot.MQMD.Format ='MQHRF2';
		
		CREATE NEXTSIBLING OF OutputRoot.MQMD DOMAIN 'MQRFH2' NAME 'MQRFH2';
		SET OutputRoot.MQRFH2.(MQRFH2.Field)StrucId = MQRFH_STRUC_ID;
		SET OutputRoot.MQRFH2.(MQRFH2.Field)Version = MQRFH_VERSION_2;
		SET OutputRoot.MQRFH2.(MQRFH2.Field)Format = MQFMT_NONE;
		SET OutputRoot.MQRFH2.(MQRFH2.Field)Flags = MQRFH_NONE;
		SET OutputRoot.MQRFH2.usr.SAID = SAID;
		SET OutputRoot.MQRFH2.usr.Model = modelNum;
		SET OutputRoot.MQRFH2.usr.Serial = serialNum;
		SET OutputRoot.MQRFH2.usr.Source = moduleNum;
		SET OutputRoot.MQRFH2.usr.Timestamp = Environment.DFDL.PublishKvp.payload.timestamp;

		SET OutputRoot.JSON.Data = Environment.JSON.Data;
		SET OutputRoot.HTTPRequestHeader = NULL;
		PROPAGATE TO TERMINAL 'out2' DELETE NONE;

		PROPAGATE TO TERMINAL 'out1';

	END;
END MODULE;


CREATE COMPUTE MODULE MQ_M2M_UpdateAttribute_GetAttrId
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL GetAttributeID();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE GetAttributeID() 
	BEGIN
		DECLARE respStatus CHARACTER FIELDVALUE(InputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Code");
		IF respStatus <> '200' THEN
			DECLARE statusMsg CHARACTER CAST(InputRoot.BLOB.BLOB AS CHARACTER CCSID 1208 ENCODING 546);
			THROW USER EXCEPTION MESSAGE 2952 VALUES('HTTP Error while executing request to get the attribute ID from maximo. Status Code: '||respStatus||'. Status Message: '||statusMsg); 
		END IF;	
		
		DECLARE attrId CHARACTER;
		SET attrId = InputRoot.JSON.Data.CDMASSETDMMboSet.CDMASSETDM.Item.CDMASSETDMID;

		DECLARE auth CHARACTER Maximo_user||':'||Maximo_password; 
		SET OutputRoot.HTTPRequestHeader.MAXAUTH = BASE64ENCODE(auth);
		SET OutputLocalEnvironment.Destination.HTTP.RequestURL = REPLACE(REPLACE(Environment.Variables.reqURL,'<<CDMASSETDMID>>',attrId),'<<VALUE>>',CAST(Environment.Variables.attrValue AS CHARACTER));
		SET OutputLocalEnvironment.Destination.HTTP.RequestLine.Method = 'POST';
	END;
END MODULE;


CREATE COMPUTE MODULE MQ_M2M_UpdateAttribute_ProcessResponse
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		CALL ParseResponse();
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE ParseResponse()
	BEGIN
		DECLARE respStatus CHARACTER FIELDVALUE(InputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Code");
		IF respStatus <> '200' THEN
			DECLARE statusMsg CHARACTER CAST(InputRoot.BLOB.BLOB AS CHARACTER CCSID 1208 ENCODING 546);
			THROW USER EXCEPTION MESSAGE 2952 VALUES('HTTP Error while executing request to update atrributes in maximo. Status Code: '||respStatus||'. Status Message: '||statusMsg); 
		END IF;	
	END;
END MODULE;
